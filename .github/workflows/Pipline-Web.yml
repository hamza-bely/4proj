name: Pipline-Web

on:
  push:
    branches:
      - main
    paths:
      - '**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install dependencies
        run: |
          cd web-traficandme
          npm install
      
      - name: Build Angular app
        run: |
          cd web-traficandme
          npm run build --prod

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Archive whole project
        run: tar -czf project.tar.gz ./*

      - name: Copy archive to server
        run: scp -i ~/.ssh/id_rsa project.tar.gz ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/

      - name: Deploy with Docker Compose
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /home/${{ secrets.USERNAME }}
            
            if ! command -v docker-compose &> /dev/null; then
              sudo apt update
              sudo apt install -y docker-compose
            fi

            rm -rf project
            mkdir project
            tar -xzf project.tar.gz -C project
            cd project
            docker-compose down
            docker-compose up -d --build
          EOF
